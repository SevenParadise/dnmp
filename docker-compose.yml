version: '3' # 版本
services: # 服务
  nginx:  # nginx 服务
    build: # 指定为构建镜像上下文路径
      context: ./apps/nginx
      # dockerfile: 指定构建镜像的 Dockerfile 文件命。
      # args: 添加构建参数，这是只能在构建过程中访问的环境变量。
      args:
        NGINX_VERSION: ${NGINX_VERSION}
      # labels: 设置构建镜像的标签。
      # target: 多层构建，可以指定构建哪一层。
    container_name: nginx #指定自定义容器名称，而不是生成的默认名称。
    ports: # ports: 暴露容器端口到主机的任意端口或指定端口  
      - "80:80"  # HOST:CONTAINER 
      - "443:443"   # HOST:CONTAINER 
      - "8383:8383" # HOST:CONTAINER 
    volumes: # 将主机的数据卷或者文件挂载到容器里
      - ${SOURCE_DIR}:/www/:rw
      - ${NGINX_SSL_CERTIFICATE_DIR}:/ssl:rw
      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/:rw
      - ${NGINX_PARAMS_DIR}:/etc/nginx/params/:rw
      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro
      - ${NGINX_FASTCGI_PHP_CONF}:/etc/nginx/fastcgi-php.conf:ro
      - ${NGINX_FASTCGI_PARAMS}:/etc/nginx/fastcgi_params:ro
      - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
    environment: # 添加环境变量，
      TZ: "${TZ}"
      WEB_ENV: "local"
    restart: always # 容器总是重新启动。
    networks: # 设置网络模式
      - default
  redis:
    image: redis:${REDIS_VERSION}  # 指定容器运行的镜像 
    container_name: redis
    ports: # HOST:CONTAINER 
      - "6379:6379"
    volumes:
      - ${REDIS_CONF_FILE}:/etc/redis.conf:ro
      - ${DATA_DIR}/redis:/data/:rw
    # entrypoint 类似于 CMD 指令，但其不会被 docker run 的命令行参数指定的指令所覆盖  
    entrypoint: ["redis-server", "/etc/redis.conf"]  # 
    environment: # 添加环境变量，
      TZ: "${TZ}"
    restart: always # 容器总是重新启动。
    networks: # 设置网络模式
      - default
  php:
    build:
      context: ./apps/php
      args:
        PHP_VERSION: php:${PHP_VERSION}-fpm-alpine
        PHP_EXTENSIONS: ${PHP_EXTENSIONS}
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        TZ: "${TZ}" 
    container_name: php
    # expose:
    #   - 9501
    ports:
      - "9501:9501"
      - "9502:9502"
      - "9503:9503"
      - "8888:8888"
      - "9601:9601"
      - "9602:9602"
    environment: # 添加环境变量，
      TZ: "${TZ}"
      WEB_ENV: "local"
    extra_hosts:
      - "backstage.xinxinapp.cn:10.180.18.22"
      - "kaluli-01.offline.hupu.com:10.180.18.30"
      - "www.xinxinapp.cn:10.180.18.22"
      - "api.xinxinapp.cn:10.180.18.22"
      - "static.xinxinapp.net:10.180.18.22"
      - "www.bpisports.com.cn:10.180.18.22"
    volumes:
      - /Users/zhangcs/.ssh/:/root/.ssh:rw
      - ${SOURCE_DIR}:/www/:rw
      - ${PHP_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP_LOG_DIR}:/var/log/php
      - ${DATA_DIR}/composer:/tmp/composer
      - ./logs/sites/bargain:/data0/log-data:rw
    restart: always  # 容器总是重新启动。
    cap_add:
      - SYS_PTRACE
    networks: # 设置网络模式
      - default
  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: mysql
    ports:
      - "${MYSQL_HOST_PORT}:3306"
    volumes:
      - ${MYSQL_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
      - ${DATA_DIR}/mysql:/var/lib/mysql/:rw
    restart: always
    networks:
      - default
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      TZ: "$TZ"
  rabbitmq:
    image: rabbitmq:${RABBITMQ_VERSION}
    container_name: rabbitmq
    restart: always
    ports:
      - "${RABBITMQ_HOST_PORT_C}:5672"
      - "${RABBITMQ_HOST_PORT_S}:15672"
    environment:
      TZ: "$TZ"
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
    networks:
      - default
  etcd1:
    image: quay.io/coreos/etcd:latest
    container_name: etcd1
    entrypoint: /usr/local/bin/etcd
    command:
      - '--name=etcd1'
      - '--initial-advertise-peer-urls=http://etcd1:2380'
      - '--listen-peer-urls=http://0.0.0.0:2380'
      - '--listen-client-urls=http://0.0.0.0:2379'
      - '--advertise-client-urls=http://etcd1:2379'
      - '--initial-cluster-token=mys3cr3ttok3n'
      - '--heartbeat-interval=250'
      - '--election-timeout=1250'
      - '--initial-cluster=etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380'
      - '--initial-cluster-state=new'
    ports: # HOST:CONTAINER 
      - "2379:2379" 
    volumes: # 将主机的数据卷或者文件挂载到容器里
      - /Users/zhangcs/dnmp/data/etcd/etcd1:/etcd_data
    networks:
      - default
  etcd2:
    container_name: etcd2
    image: quay.io/coreos/etcd:latest
    entrypoint: /usr/local/bin/etcd
    command:
      - '--name=etcd2'
      - '--initial-advertise-peer-urls=http://etcd2:2380'
      - '--listen-peer-urls=http://0.0.0.0:2380'
      - '--listen-client-urls=http://0.0.0.0:2379'
      - '--advertise-client-urls=http://etcd2:2379'
      - '--initial-cluster-token=mys3cr3ttok3n'
      - '--heartbeat-interval=250'
      - '--election-timeout=1250'
      - '--initial-cluster=etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380'
      - '--initial-cluster-state=new'
    ports: # HOST:CONTAINER 
      - "22379:2379"
    volumes:
      - /Users/zhangcs/dnmp/data/etcd/etcd2:/etcd_data
    networks:
      - default  
  etcd3:
    container_name: etcd3
    image: quay.io/coreos/etcd:latest
    entrypoint: /usr/local/bin/etcd
    command:
      - '--name=etcd3'
      - '--initial-advertise-peer-urls=http://etcd3:2380'
      - '--listen-peer-urls=http://0.0.0.0:2380'
      - '--listen-client-urls=http://0.0.0.0:2379'
      - '--advertise-client-urls=http://etcd3:2379'
      - '--initial-cluster-token=mys3cr3ttok3n'
      - '--heartbeat-interval=250'
      - '--election-timeout=1250'
      - '--initial-cluster=etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380'
      - '--initial-cluster-state=new'
    ports: # HOST:CONTAINER 
      - "32379:2379"
    volumes:
      - /Users/zhangcs/dnmp/data/etcd/etcd3:/etcd_data
    networks:
      - default
  etcdkeeper:
    container_name: "etcdkeeper"
    image: deltaprojects/etcdkeeper
    environment:
      HOST: "0.0.0.0"
    ports: # HOST:CONTAINER 
      - 12000:8080
    depends_on:
      - etcd1
    networks:
      - default
networks:
  default:
